/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// LAYERS

#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUNC    3

// MACROS

#define SUPER LC(LSHIFT)
#define SUPER2 LA(LC(LSHIFT))

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm RGUI SEMI>, <&kp SQT>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LCTRL TAB>, <&kp ESC>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_cword {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&Ctrl_V>;
        };

        combo_vimwq {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&Ctrl_V>;
        };
    };

    macros {
        Ctrl_C: Ctrl_C {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RCTRL &kp C>;
            label = "CTRL_C";
        };

        Ctrl_V: Ctrl_V {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RCTRL &kp V>;
            label = "CTRL_V";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Layer_Base {
            bindings = <
&none  &kp Q       &kp W       &kp E        &kp R         &kp T        &kp Y         &kp U         &kp I           &kp O       &kp P     &none
&none  &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHIFT F  &kp G        &kp H         &hm RSHIFT J  &hm RCTRL K     &hm RALT L  &td0      &none
&none  &kp Z       &kp X       &kp C        &kp V         &kp B        &kp N         &kp M         &kp COMMA       &kp DOT     &kp FSLH  &none
                               &kp TAB      &lt 1 ESCAPE  &kp SPACE    &mt RGUI RET  &mo 2         &mt RALT GRAVE
            >;
        };

        Layer_Nav_Numb {
            bindings = <
&none  &kp N1  &kp N2  &kp N3    &kp N4     &kp N5    &kp N6  &kp N7        &kp N8          &kp N9  &kp N0  &none
&none  &none   &none   &kp LEFT  &kp RIGHT  &none     &none   &kp UP_ARROW  &kp DOWN_ARROW  &none   &tog 4  &none
&none  &none   &none   &none     &kp HOME   &none     &none   &kp END       &none           &none   &none   &none
                       &trans    &trans     &trans    &trans  &mo 4         &trans
            >;
        };

        Layer_Symbs {
            bindings = <
&none  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none  &kp GRAVE  &kp TILDE  &none     &none     &none        &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &none
&none  &kp TILDE  &none      &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &none
                             &trans    &mo 4     &trans       &trans     &trans     &trans
            >;
        };

        Layer_Func {
            bindings = <
&none  &kp F1  &kp F2   &kp F3   &kp F4   &kp F5          &none        &none   &none       &none  &none  &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none           &none        &none   &none       &none  &none  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none           &none        &none   &none       &none  &none  &none
                        &none    &trans   &kp LEFT_ALT    &bootloader  &trans  &sys_reset
            >;
        };

        Layer_Game {
            bindings = <
&trans  &kp ESC    &kp N1  &kp N2     &kp N3    &kp N4       &trans     &trans    &trans        &trans     &trans  &trans
&trans  &kp TAB    &kp Q   &kp W      &kp E     &kp R        &trans     &kp M     &kp UP_ARROW  &trans     &trans  &trans
&trans  &kp LSHFT  &kp A   &kp S      &kp D     &kp F        &trans     &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans
                           &kp LCTRL  &kp LALT  &kp SPACE    &kp RCTRL  &trans    &trans
            >;
        };
    };
};
